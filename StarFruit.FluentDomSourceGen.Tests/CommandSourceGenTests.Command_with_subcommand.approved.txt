using StarFruit2;
using System.CommandLine;
using StarFruit2.Common;
using System.CommandLine.Invocation;
using System.CommandLine.Parsing;

public class MyCommandCommandSource : RootCommandSource<MyCommandCommandSource>
{
   public MyCommandCommandSource()
   : this(null, null)
   {
   }
   public MyCommandCommandSource(RootCommandSource root, CommandSource parent)
   : base(new Command("my-command", null), parent)
   {
      SubCommandCommand = new SubCommandCommandSource(this, this);
      Command.AddCommand(SubCommandCommand.Command);
      Command.Handler = CommandHandler.Create((InvocationContext context) =>
             {  
                CurrentCommandSource = this;
                CurrentParseResult = context.ParseResult;
                return 0;
             });
   }

   public SubCommandCommandSource SubCommandCommand { get; set; }

}
public class SubCommandCommandSource : CommandSource
{
   public SubCommandCommandSource(RootCommandSource root, CommandSource parent)
   : base(new Command(null, null), parent)
   {
      Command.Handler = CommandHandler.Create(() =>
             {  
                root.CurrentCommandSource = this;
                return 0;
             });
   }


}
